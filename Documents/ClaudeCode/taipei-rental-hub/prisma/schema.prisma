// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 物件模型
model Property {
  id              String          @id @default(cuid())
  sourceId        String          // 原始平台的ID
  source          String          // 來源平台 (RENTAL591, RAKUYA, etc.)
  title           String
  description     String?
  price           Int             // 月租金
  deposit         String?         // 押金說明
  
  // 位置資訊
  district        String          // 區域（大安區、信義區等）
  address         String
  nearMRT         String?         // 最近捷運站
  latitude        Float?
  longitude       Float?
  
  // 房屋資訊
  area            Float?          // 坪數
  roomType        String          // 套房、1房、2房等
  floor           String?         // 樓層
  totalFloors     String?         // 總樓層
  
  // 設施
  hasParking      Boolean         @default(false)
  hasPet          Boolean         @default(false)
  hasCooking      Boolean         @default(false)
  hasElevator     Boolean         @default(false)
  hasBalcony      Boolean         @default(false)
  hasWasher       Boolean         @default(false)
  
  // 聯絡資訊
  contactName     String?
  contactPhone    String?
  contactLine     String?
  
  // 系統資訊
  url             String          // 原始連結
  isActive        Boolean         @default(true)
  viewCount       Int             @default(0)
  firstSeenAt     DateTime        @default(now())
  lastSeenAt      DateTime        @default(now())
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  images          PropertyImage[]
  features        PropertyFeature[]
  priceHistory    PriceHistory[]
  
  @@unique([source, sourceId])
}

// 物件圖片
model PropertyImage {
  id          String    @id @default(cuid())
  propertyId  String
  url         String
  type        String    @default("PHOTO") // PHOTO, FLOORPLAN, VR360
  order       Int       @default(0)
  createdAt   DateTime  @default(now())
  
  property    Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}

// 物件特色標籤
model PropertyFeature {
  id          String   @id @default(cuid())
  propertyId  String
  feature     String   // 特色描述
  category    String?  // 分類（設備、交通、生活機能等）
  
  property    Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}

// 價格歷史
model PriceHistory {
  id          String   @id @default(cuid())
  propertyId  String
  price       Int
  recordedAt  DateTime @default(now())
  
  property    Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}

// 搜尋歷史
model SearchHistory {
  id          String   @id @default(cuid())
  query       String?  // 自然語言查詢
  criteria    String   // JSON 結構化搜尋條件
  resultCount Int      @default(0)
  createdAt   DateTime @default(now())
}

// 爬蟲執行記錄
model CrawlerLog {
  id              String         @id @default(cuid())
  source          String         // PropertySource (RENTAL591, RAKUYA, etc.)
  status          String         // CrawlerStatus (RUNNING, COMPLETED, FAILED)
  totalFound      Int            @default(0)
  newProperties   Int            @default(0)
  updatedProperties Int          @default(0)
  errorMessage    String?
  startedAt       DateTime       @default(now())
  completedAt     DateTime?
}